{"ast":null,"code":"import axios from 'axios';\nconst API_URL = \"http://127.0.0.1:8003/v1/api/produtos\";\nexport const fetchProducts = async () => {\n  return await axios.get(`${API_URL}/listar_todos`);\n};\nexport const createProduct = async product => {\n  return await axios.post(`${API_URL}/criar`, product);\n};\nexport const updateProduct = async (id, product) => {\n  return await axios.put(`${API_URL}/update/${id}`, product);\n};\nexport const deleteProduct = async id => {\n  return await axios.delete(`${API_URL}/delete/${id}`);\n};\nexport const aumentarCaixas = async (id, quantidade) => {\n  return await axios.put(`${API_URL}/aumentar_caixas/${id}?quantidade=1`);\n};\nexport const diminuirCaixas = async (id, quantidade) => {\n  return await axios.put(`${API_URL}/diminuir_caixas/${id}?quantidade=1`);\n};\nconst nodemailer = require('nodemailer');\n\n// Configura o transporte do e-mail (utilizando o serviço de email, como Gmail, SMTP etc.)\nlet transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: 'seuemail@gmail.com',\n    pass: 'suasenha'\n  }\n});\n\n// Função para enviar o email\nconst sendLowStockEmail = async product => {\n  let info = await transporter.sendMail({\n    from: '\"Sistema de Gestão\" <92rafa@gmail.com>',\n    to: 'rafael.gareti@aluno.faculdadeimpacta.com.br',\n    subject: `Compra Necessária: ${product.item}`,\n    text: `A quantidade do produto ${product.item} atingiu a quantidade mínima. Por favor, compre mais 100 unidades.`,\n    html: `<p>A quantidade do produto <strong>${product.item}</strong> atingiu a quantidade mínima. Por favor, compre mais 100 unidades.</p>`\n  });\n  console.log('E-mail enviado: %s', info.messageId);\n};","map":{"version":3,"names":["axios","API_URL","fetchProducts","get","createProduct","product","post","updateProduct","id","put","deleteProduct","delete","aumentarCaixas","quantidade","diminuirCaixas","nodemailer","require","transporter","createTransport","service","auth","user","pass","sendLowStockEmail","info","sendMail","from","to","subject","item","text","html","console","log","messageId"],"sources":["C:/Users/Rafael/Documents/ADS/ADS5A/Software Product/api_ms_dev-dev/app/fronted/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = \"http://127.0.0.1:8003/v1/api/produtos\";\r\n\r\nexport const fetchProducts = async () => {\r\n  return await axios.get(`${API_URL}/listar_todos`);\r\n};\r\n\r\nexport const createProduct = async (product) => {\r\n  return await axios.post(`${API_URL}/criar`, product);\r\n};\r\n\r\nexport const updateProduct = async (id, product) => {\r\n  return await axios.put(`${API_URL}/update/${id}`, product);\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n  return await axios.delete(`${API_URL}/delete/${id}`);\r\n};\r\n\r\nexport const aumentarCaixas = async (id, quantidade) => {\r\n  return await axios.put(`${API_URL}/aumentar_caixas/${id}?quantidade=1`);\r\n};\r\n\r\nexport const diminuirCaixas = async (id, quantidade) => {\r\n  return await axios.put(`${API_URL}/diminuir_caixas/${id}?quantidade=1`);\r\n};\r\n\r\n\r\nconst nodemailer = require('nodemailer');\r\n\r\n// Configura o transporte do e-mail (utilizando o serviço de email, como Gmail, SMTP etc.)\r\nlet transporter = nodemailer.createTransport({\r\n  service: 'gmail',\r\n  auth: {\r\n    user: 'seuemail@gmail.com',\r\n    pass: 'suasenha'\r\n  }\r\n});\r\n\r\n// Função para enviar o email\r\nconst sendLowStockEmail = async (product) => {\r\n  let info = await transporter.sendMail({\r\n    from: '\"Sistema de Gestão\" <92rafa@gmail.com>',\r\n    to: 'rafael.gareti@aluno.faculdadeimpacta.com.br',\r\n    subject: `Compra Necessária: ${product.item}`,\r\n    text: `A quantidade do produto ${product.item} atingiu a quantidade mínima. Por favor, compre mais 100 unidades.`,\r\n    html: `<p>A quantidade do produto <strong>${product.item}</strong> atingiu a quantidade mínima. Por favor, compre mais 100 unidades.</p>`\r\n  });\r\n\r\n  console.log('E-mail enviado: %s', info.messageId);\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uCAAuC;AAEvD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,OAAO,MAAMF,KAAK,CAACG,GAAG,CAAC,GAAGF,OAAO,eAAe,CAAC;AACnD,CAAC;AAED,OAAO,MAAMG,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC9C,OAAO,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAEI,OAAO,CAAC;AACtD,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAOC,EAAE,EAAEH,OAAO,KAAK;EAClD,OAAO,MAAML,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,WAAWO,EAAE,EAAE,EAAEH,OAAO,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAOF,EAAE,IAAK;EACzC,OAAO,MAAMR,KAAK,CAACW,MAAM,CAAC,GAAGV,OAAO,WAAWO,EAAE,EAAE,CAAC;AACtD,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAOJ,EAAE,EAAEK,UAAU,KAAK;EACtD,OAAO,MAAMb,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,oBAAoBO,EAAE,eAAe,CAAC;AACzE,CAAC;AAED,OAAO,MAAMM,cAAc,GAAG,MAAAA,CAAON,EAAE,EAAEK,UAAU,KAAK;EACtD,OAAO,MAAMb,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,oBAAoBO,EAAE,eAAe,CAAC;AACzE,CAAC;AAGD,MAAMO,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAExC;AACA,IAAIC,WAAW,GAAGF,UAAU,CAACG,eAAe,CAAC;EAC3CC,OAAO,EAAE,OAAO;EAChBC,IAAI,EAAE;IACJC,IAAI,EAAE,oBAAoB;IAC1BC,IAAI,EAAE;EACR;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,iBAAiB,GAAG,MAAOlB,OAAO,IAAK;EAC3C,IAAImB,IAAI,GAAG,MAAMP,WAAW,CAACQ,QAAQ,CAAC;IACpCC,IAAI,EAAE,wCAAwC;IAC9CC,EAAE,EAAE,6CAA6C;IACjDC,OAAO,EAAE,sBAAsBvB,OAAO,CAACwB,IAAI,EAAE;IAC7CC,IAAI,EAAE,2BAA2BzB,OAAO,CAACwB,IAAI,oEAAoE;IACjHE,IAAI,EAAE,sCAAsC1B,OAAO,CAACwB,IAAI;EAC1D,CAAC,CAAC;EAEFG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAET,IAAI,CAACU,SAAS,CAAC;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}